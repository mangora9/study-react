[{"/Users/mango/workspace/study/react-complete-guide/section-10/src/index.js":"1","/Users/mango/workspace/study/react-complete-guide/section-10/src/App.js":"2","/Users/mango/workspace/study/react-complete-guide/section-10/src/components/Login/Login.js":"3","/Users/mango/workspace/study/react-complete-guide/section-10/src/components/MainHeader/MainHeader.js":"4","/Users/mango/workspace/study/react-complete-guide/section-10/src/components/Home/Home.js":"5","/Users/mango/workspace/study/react-complete-guide/section-10/src/components/MainHeader/Navigation.js":"6","/Users/mango/workspace/study/react-complete-guide/section-10/src/components/UI/Card/Card.js":"7","/Users/mango/workspace/study/react-complete-guide/section-10/src/components/UI/Button/Button.js":"8"},{"size":169,"mtime":1616565128000,"results":"9","hashOfConfig":"10"},{"size":1232,"mtime":1653270019853,"results":"11","hashOfConfig":"10"},{"size":3380,"mtime":1653284389461,"results":"12","hashOfConfig":"10"},{"size":368,"mtime":1616565128000,"results":"13","hashOfConfig":"10"},{"size":347,"mtime":1653383427265,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1616565128000,"results":"15","hashOfConfig":"10"},{"size":218,"mtime":1616565128000,"results":"16","hashOfConfig":"10"},{"size":353,"mtime":1616565128000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qcygw1",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/mango/workspace/study/react-complete-guide/section-10/src/index.js",[],"/Users/mango/workspace/study/react-complete-guide/section-10/src/App.js",[],"/Users/mango/workspace/study/react-complete-guide/section-10/src/components/Login/Login.js",["36"],"import React, {useEffect, useState, useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'EMAIL_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@'),\n    }\n  }\n  if (action.type === 'EMAIL_INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@'),\n    }\n  }\n  return {\n    value: '',\n    isValid: false,\n  };\n}\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.length > 6,\n    }\n  }\n  if (action.type === 'PASSWORD_INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.length > 6,\n    }\n  }\n  return {\n    value: '',\n    isValid: false,\n  };\n}\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: null});\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '', isValid: null});\n\n  const {isValid: emailIsValid} = emailState;\n  const {isValid: passwordIsValid} = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('validate!!')\n      setFormIsValid(emailIsValid && passwordState);\n    }, 500);\n\n    return () => {\n      console.log('clean up!!');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordState]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: 'EMAIL_INPUT',\n      val: event.target.value,\n    });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({\n      type: 'PASSWORD_INPUT',\n      val: event.target.value,\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'EMAIL_INPUT_BLUR'\n    })\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'PASSWORD_INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n            autoComplete='on'\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","/Users/mango/workspace/study/react-complete-guide/section-10/src/components/MainHeader/MainHeader.js",[],"/Users/mango/workspace/study/react-complete-guide/section-10/src/components/Home/Home.js",[],"/Users/mango/workspace/study/react-complete-guide/section-10/src/components/MainHeader/Navigation.js",[],"/Users/mango/workspace/study/react-complete-guide/section-10/src/components/UI/Card/Card.js",[],"/Users/mango/workspace/study/react-complete-guide/section-10/src/components/UI/Button/Button.js",[],["37","38"],{"ruleId":"39","severity":1,"message":"40","line":51,"column":19,"nodeType":"41","messageId":"42","endLine":51,"endColumn":34},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},"no-unused-vars","'passwordIsValid' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-global-assign","no-unsafe-negation"]